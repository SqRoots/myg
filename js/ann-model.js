
// 激活函数（Activation Function）
function LogisticSigmoid(x_matrix){
  return math.dotDivide(1,math.add(1,math.exp(math.unaryMinus(x_matrix))))
}
// console.log(LogisticSigmoid([1,2,3]));


// SoftMax
function SoftMax(x_matrix){
  x = math.flatten(x_matrix);
  return math.divide(math.exp(x),math.multiply(math.ones(math.size(x)),math.exp(x)))
}
// console.log(SoftMax([1,2,3]));

// evaluate ann
function eval_ann(ann_input){
  // 从表单读取输入数据 ann_input
  // form_agrs = $('#form_agrs').serializeArray();
  // var ann_input = [];
  // for (k in form_agrs){
  //   ann_input.push([parseFloat(form_agrs[k].value)])
  // }
  for (var i=0,len=ann_input.length; i<len; i++){
    if (ann_input[i]==''){
      return null
    }
  }

  // 计算神经网络，输入数据标准化
  var standard_input = math.dotDivide(math.subtract(ann_input,data_mean),data_var);
  standard_input = LogisticSigmoid(standard_input);
  standard_input.push([1]);

  // 计算神经网络，隐藏层1
  ann_layer_1_out = math.multiply(ann_layer_1,standard_input);
  ann_layer_1_out.pop();
  ann_layer_1_out = LogisticSigmoid(ann_layer_1_out);
  ann_layer_1_out.push([1])

  // 计算神经网络，隐藏层2
  ann_layer_2_out = math.multiply(ann_layer_2,ann_layer_1_out);
  ann_layer_2_out.pop();
  ann_layer_2_out = LogisticSigmoid(ann_layer_2_out);
  ann_layer_2_out.push([1])

  // 计算神经网络，隐藏层3
  ann_layer_3_out = math.multiply(ann_layer_3,ann_layer_2_out);
  ann_layer_3_out.pop()

  // 计算神经网络，输出层
  sm = SoftMax(ann_layer_3_out);

  // 返回结果
  return sm[1]
}

// ===========================================================================
// const parser = math.parser()
// // 激活函数（Activation Function）
// parser.eval('LogisticSigmoid(x) = 1./(1.+e.^(-x))')
// console.log(parser.eval('LogisticSigmoid([1,2,3])'));
//
//
// // SoftMax
// parser.eval('SoftMax(x) = e.^(x)./(ones(size(x)[1])*(e.^(x)))')
// console.log(parser.eval('SoftMax([1,2,3])'));
// ===========================================================================


// 均值
var data_mean = [
[36.6773],
[291.568],
[156.718],
[32.5414],
[104.082],
[642.218]
];

//标准差
var data_var = [
[10.4683],
[365.355],
[193.577],
[5.72307],
[274.452],
[554.484]
];

//输入→隐藏层1，Weight+Biases
var ann_layer_1 = [
[-3.36166, -0.507168, 3.00754, 0.00409603, -4.27555, -0.601318, 0.530057],
[-0.704205, -0.0330234, -0.547472, -0.195788, -2.20362, -0.318796, 0.112384],
[3.58183, -1.20783, -2.32299, 0.672268, 7.96221, 0.14696, -2.03198],
[-0.974284, 0.102838, 0.0990462, -1.67673, 0.629877, 0.375364, -1.31296],
[-1.40824, -0.459021, -0.34116, 0.340251, -0.787899, -0.468526, -1.20968],
[6.45626, 1.22747, 3.2846, -0.574042, 3.30453, -6.5048, -2.50924],
[0.132631, -0.504586, -1.0211, 0.274436, 0.773519, -0.883864, 0.0639525],
[1.16435, -0.295744, -0.662085, -0.121439, -1.49769, -1.44575, -0.767175],
[-0.305178, -1.46049, -1.89951, -0.445019, 0.372636, -0.758599, -1.18215],
[-0.291479, 0.0196015, -0.0184141, -0.865167, 0.615166, -0.736865, -0.346729],
[-1.45576, 0.293838, -0.35334, 0.313281, -0.151077, -0.543624, 0.654371],
[-0.336265, -0.829233, -0.0781395, 0.0125966, 0.475388, -1.14153, 0.588322],
[-0.681168, 7.32629, 7.36969, -0.40575, -1.72958, 0.611888, -2.75348],
[0.28179, 0.866673, -0.269209, -0.0220665, 0.74963, -0.0295616, 0.874065],
[-1.84743, -0.560912, -0.69467, -0.00561671, -0.853201, -0.978698, -1.61014],
[-0.195955, -0.886417, -0.0849506, -0.872913, -0.0313783, -0.375201, -0.591284],
[1.95819, 1.22734, 4.21036, 2.14888, -1.50114, 2.56936, -3.56026],
[0.35032, -0.00539425, -0.532975, -0.385631, -0.238152, -0.518864, -0.65728],
[1.75284, 0.308864, -0.97787, 0.455844, 3.13628, 0.233955, -0.238826],
[-1.35826, -0.322986, -0.982288, -0.736083, -0.125409, -1.35805, -0.976423],
[-2.37884, 1.25533, -2.21846, -0.711823, 0.557366, -2.05304, 0.575885],
[-0.059065, 0.127615, 0.524508, 0.658855, 0.0955336, -0.0450369, -0.827207],
[1.01179, 2.74303, 2.04082, -2.41464, -1.19451, -1.07957, -1.52079],
[-1.13021, -1.35398, 0.925623, 0.45741, 0.829034, -1.5167, -0.228459],
[2.28826, 0.0619419, 0.518654, 0.343251, -1.47933, 1.35619, -2.36474],
[-1.33377, -1.55665, -0.10711, -0.990764, 0.0748419, -0.915404, -0.841432],
[-0.110001, -0.613727, -1.42956, -0.0315316, -0.884319, 0.407944, -0.957363],
[1.72007, 0.985716, -1.16433, 0.0928946, 0.0703959, 0.470713, -0.507167],
[-3.79207, 0.975489, 2.6189, -0.320943, -6.48619, -0.156563, 1.05072],
[4.80348, -5.51862, 2.26459, -0.473388, 1.97665, -8.27778, 1.92497],
[-0.724946, -0.162573, 0.482869, -0.828071, -1.4408, -0.601047, -0.521172],
[-1.23315, -3.3889, -3.06965, -0.258465, 0.0929209, -0.0578827, 1.67062],
[2.05171, 0.376096, 1.97313, -0.450626, -1.22904, 1.24214, -3.20763],
[1.97956, 2.66383, 0.95233, -3.84607, -0.0387738, -0.873268, -0.811612],
[-0.69829, 0.264601, 1.22345, 0.308513, 0.823901, 0.0437158, -0.473211],
[-0.627789, -3.71722, -3.37396, 1.67172, -0.347944, -0.593882, 0.390253],
[0, 0, 0, 0, 0, 0, 1]
];

//输入→隐藏层2，Weight+Biases
var ann_layer_2 = [
[-0.293494, -2.14389, -1.09807, -0.45737, -0.0313657, -2.07532, -1.65483, -1.2717, 0.411402, -1.63173, -1.21165, -0.929746, -2.41014, -2.55413, -0.917018, -0.81361, -2.19112, -1.07342, -3.15912, 0.27905, -1.52575, -1.89399, -1.74538, -1.31946, -1.58899, -0.15997, -0.385606, -3.03595, -1.01861, -1.32006, -0.449039, -0.95424, -1.71871, -0.375519, -1.63542, -0.598177, -2.37792],
[-0.0516652, -0.355864, -1.58562, -0.160739, 0.239859, -2.18578, -0.880524, -0.668442, -1.05762, -0.991483, -0.285142, -0.242533, -1.93404, -0.984776, -0.0658459, -1.24693, -0.764516, -0.762525, -1.36076, 0.449915, -0.123769, -1.97851, -0.427151, 0.125275, -1.44999, -0.159625, -1.14901, -2.25275, -1.41009, -1.15561, 0.623044, -0.0966249, -1.45248, -0.93633, -2.05823, -0.886834, -3.13273],
[-0.918716, -1.13482, 0.131435, -1.58147, -0.795964, -1.20382, -1.20024, -0.231717, 0.258435, -1.14639, -0.457231, -0.302605, -0.775206, -1.74427, -0.564503, -0.613246, 0.162302, -1.21881, -0.64429, -0.272038, -0.210396, -0.877686, -0.827307, -1.30008, -1.81772, -1.05566, 0.399582, -1.24458, -0.207857, -1.22566, 0.0124239, -0.394518, -0.26747, -0.402169, -1.58994, -0.808174, -0.813266],
[-0.61008, 0.077405, 0.0754094, -0.698508, -0.995734, -1.19206, -0.00578732, -1.21969, -0.325104, -1.30932, -0.612126, 0.327622, -0.98964, -0.13873, -0.0699062, -0.0148954, -1.09654, -0.772232, -1.59702, 0.461827, -1.07741, -0.530422, -0.0238005, -0.0899825, -1.17228, 0.0386556, 0.101035, -0.410539, -0.676805, 0.240991, 0.736037, 0.154411, -1.14338, -0.106517, -0.681535, -0.0217183, -1.44112],
[3.99456, 1.57365, -6.16303, -0.725524, 0.782866, -5.41716, 1.46454, 1.29013, -1.26449, 0.526786, 1.19013, 1.62978, 6.89986, -0.595717, -0.627874, 0.353063, 4.81683, 0.551564, -2.22659, -1.14852, -2.85479, -0.541041, -3.1537, 2.03225, -2.55175, -0.653154, 0.114349, -1.25283, 5.27564, 7.76626, 0.937793, -2.7979, -3.26543, -2.87437, -1.13755, -3.05524, -0.629983],
[0.502432, -0.580109, -1.23207, -0.585511, 0.380823, -0.154969, -1.24873, 0.167273, -1.19069, -1.11427, -0.262644, -0.209339, -1.35175, 0.425168, 0.226474, -1.01584, -1.31832, 0.369842, -1.52093, -0.177449, 0.28202, -0.126272, -0.930297, 0.67651, -0.997259, 0.263579, -0.914081, -0.0412607, 0.0217723, -0.805887, -0.630198, -0.397615, -1.44062, -0.892894, -1.46674, -0.482212, -1.40099],
[0.244176, -1.07256, -0.929499, 0.267957, -0.165579, -0.846494, 0.308202, -0.968693, 0.300323, -0.491401, -0.448876, -0.725145, -0.737221, 0.107027, -0.767689, -0.0270381, -1.1512, -0.990957, -0.403389, 0.320058, 0.179165, -1.16248, 0.397806, -0.21705, -1.42884, -1.24641, -0.20497, -0.315581, -1.64344, -0.761714, 0.459965, -0.49303, -1.16166, -1.00103, -1.06426, 0.0693572, -0.609586],
[-0.223443, -0.491152, -1.03407, -0.0875058, -1.15656, -0.104659, -0.465699, -1.21504, 0.19937, -1.42226, -1.04784, 0.752448, -0.0032693, -1.2352, 0.0886227, -0.870624, -1.32834, -1.15114, -0.401023, -0.103507, -0.647003, -0.582684, 0.348331, -0.86703, -1.5048, 0.263557, -0.222689, -2.14514, -0.422606, -0.839984, -0.353775, -0.275385, -0.153728, -0.445506, -0.0146266, -0.0588323, -2.00705],
[-1.31707, 0.015028, 0.19227, -1.91041, 0.256933, -0.799188, -0.289136, -0.93477, 0.570802, -0.261578, -0.932095, -0.529649, -0.843955, -1.81003, -0.0694165, -1.1278, -0.762956, -0.114275, -2.13781, -0.305523, 0.0132619, -1.41346, -0.014405, 0.31705, -0.848661, -1.68184, -1.30452, -1.3781, -1.89334, -2.15355, -1.05007, -0.469129, -0.284819, -0.39316, -1.20537, -0.318311, -1.6198],
[0.668186, -0.52697, 0.776992, 0.352483, 0.536352, -0.943032, -0.100398, 0.78971, 0.299416, -0.842663, 0.758689, 0.602906, -0.581132, -0.730412, 0.543182, -0.304339, 1.03725, 0.749017, 0.922209, -0.950217, -0.646568, -0.464016, -0.675896, -0.0703378, -1.36026, -0.196829, -0.585373, -0.0530848, -0.912052, -0.289365, -0.434387, 0.78098, -1.16917, -1.13896, -0.628615, 0.0611572, 0.310798],
[-0.879919, -0.0846894, -0.188837, -0.296397, 0.38716, -0.531742, 0.523538, 0.579652, 0.475979, 0.269741, -1.19735, -0.0114077, -0.339091, -0.846804, -0.147271, -1.16546, -0.83935, -1.23302, -1.15468, -0.613193, -0.520835, -0.50997, -0.452343, -0.0486658, -0.330957, 0.18641, -0.546591, -0.689701, -0.614878, -1.55257, -0.676807, -0.565526, -0.975628, -0.111997, -1.21952, -1.52531, -0.871357],
[-0.330733, -0.627069, -0.712537, -0.99831, 0.179063, -0.756773, -1.12574, -0.889479, 0.0200073, -0.635065, 0.224134, -0.937553, -0.843855, -0.885592, -1.17682, 0.500942, -0.318539, 0.0367357, -1.2927, -1.05563, -0.21428, -0.55731, -0.474606, -1.0927, -1.52817, 0.108708, -0.710313, -0.446654, -1.17282, 0.103605, 0.382031, 0.237107, 0.196767, 0.370408, -0.762898, -0.68661, -0.81223],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
];

//输入→隐藏层3，Weight+Biases
var ann_layer_3 = [
[-0.831426, -0.880307, -1.1992, -0.432791, -2.47598, -0.168779, -1.28914, 1.36042, -0.194153, 0.496273, -0.444189, -0.283851, 1.02709],
[-0.0462238, -0.331804, 1.66779, 1.59378, 1.29404, -0.787222, 0.652446, -0.983935, 1.13594, -1.4966, 1.07801, 0.776701, -0.419578],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
];
