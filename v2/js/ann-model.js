
// 激活函数1（Activation Function）
function LogisticSigmoid(x_matrix){
  return math.dotDivide(1,math.add(1,math.exp(math.unaryMinus(x_matrix))))
}
// console.log(LogisticSigmoid([1,2,3]));

// 激活函数2（Activation Function）
function Ramp(x_matrix){
  const a = math.matrix(x_matrix);
  const b = a.map(function (value, index, matrix) {
    return Math.max(0,value)
  });
  return b;
}

// SoftMax
function SoftMax(x_matrix){
  x = math.flatten(x_matrix);
  return math.divide(math.exp(x),math.multiply(math.ones(math.size(x)),math.exp(x)))
}
// console.log(SoftMax([1,2,3]));

// evaluate ann
function eval_ann(ann_input){
  // 从表单读取输入数据 ann_input
  // form_agrs = $('#form_agrs').serializeArray();
  // var ann_input = [];
  // for (k in form_agrs){
  //   ann_input.push([parseFloat(form_agrs[k].value)])
  // }
  for (var i=0,len=ann_input.length; i<len; i++){
    if (ann_input[i]==''){
      return null
    }
  }

  // 计算神经网络，输入数据标准化
  var standard_input = math.dotDivide(math.subtract(ann_input,data_mean),data_std);
  standard_input = LogisticSigmoid(standard_input);
  standard_input.push([1]);

  // 计算神经网络，隐藏层1
  ann_layer_1_out = math.multiply(ann_layer_1,standard_input);
  ann_layer_1_out.pop();
  ann_layer_1_out = Ramp(ann_layer_1_out);
  ann_layer_1_out.push([1])

  // 计算神经网络，隐藏层2
  ann_layer_2_out = math.multiply(ann_layer_2,ann_layer_1_out);
  ann_layer_2_out.pop();
  ann_layer_2_out = Ramp(ann_layer_2_out);
  ann_layer_2_out.push([1])

  // 计算神经网络，隐藏层3
  ann_layer_3_out = math.multiply(ann_layer_3,ann_layer_2_out);
  ann_layer_3_out.pop()

  // 计算神经网络，输出层
  sm = SoftMax(ann_layer_3_out);

  // 返回结果
  return sm[1]
}

// ===========================================================================
// const parser = math.parser()
// // 激活函数（Activation Function）
// parser.eval('LogisticSigmoid(x) = 1./(1.+e.^(-x))')
// console.log(parser.eval('LogisticSigmoid([1,2,3])'));
//
//
// // SoftMax
// parser.eval('SoftMax(x) = e.^(x)./(ones(size(x)[1])*(e.^(x)))')
// console.log(parser.eval('SoftMax([1,2,3])'));
// ===========================================================================


// 均值
var data_mean = [[0.0293638],
[0.429853],
[36.093],
[267.547],
[147.166],
[32.6098],
[104.146],
[666.794]];

//标准差
var data_std = [[0.168893],
[0.495257],
[10.4854],
[348.174],
[198.366],
[5.82983],
[274.449],
[557.807]];

//输入→隐藏层1，Weight+Biases
var ann_layer_1 = [[-0.000000000000000000000000000000000000000705548,-0.000000000000000000000000000000000000000311395,-0.000000000000000000000000000000000000000485187,-0.000000000000000000000000000000000000000251581,-0.000000000000000000000000000000000000000163875,-0.000000000000000000000000000000000000000518298,-0.00000000000000000000000000000000000000027431,-0.000000000000000000000000000000000000000416874,-0.00000000000000000000000000000000000000052777],
[-0.000000000000000000000000000000000000000279134,-0.000000000000000000000000000000000000000307818,-0.000000000000000000000000000000000000000403753,-0.000000000000000000000000000000000000000517281,-0.000000000000000000000000000000000000000444694,-0.000000000000000000000000000000000000000311908,-0.000000000000000000000000000000000000000546553,-0.000000000000000000000000000000000000000316716,-0.000000000000000000000000000000000000000596889],
[0.455383,0.323774,-0.0919704,0.774539,0.569655,0.599334,-0.315568,-0.732703,-0.353712],
[-0.266814,0.489478,0.195921,0.0436154,0.156122,-0.126566,0.521864,0.478833,-0.450013],
[-0.417536,-0.371932,0.816119,0.269945,-0.714209,0.632354,-0.347252,-0.568488,0.784363],
[-0.250234,-0.451881,0.60498,0.321638,0.0435966,0.172455,-0.108762,0.377443,-0.509109],
[-0.445226,0.492284,0.313923,-0.731776,0.0710927,-0.383111,0.829849,-0.575869,0.732229],
[0.000000000000000000000000000000000000000146542,0.000000000000000000000000000000000000000173433,-0.000000000000000000000000000000000000000457188,-0.0000000000000000000000000000000000000000504383,-0.000000000000000000000000000000000000000152873,-0.000000000000000000000000000000000000000153613,-0.0000000000000000000000000000000000000000565466,-0.000000000000000000000000000000000000000162254,-0.0000000000000000000000000000000000000000179899],
[-0.660917,0.224228,-0.122541,0.85459,0.602294,-0.219477,-0.154892,-0.268034,-0.0172757],
[0.221629,0.0258547,0.797712,0.0974231,-0.0518873,-0.123891,0.270047,-0.413333,0.578005],
[-0.330301,0.247764,-0.0787848,-0.586754,-0.187262,0.919047,-0.522641,0.492052,-0.3316],
[-0.536821,-0.386651,-0.605662,0.573303,-0.00298369,-0.188369,0.374256,0.89418,0.512077],
[0.0264828,0.15617,-0.043822,-0.210061,0.339207,-0.122397,0.117353,-0.320451,-0.0863217],
[0.0987584,-0.423474,-0.129251,-0.254108,0.528182,-0.601111,0.196892,-0.372519,0.609869],
[0.439945,-0.313181,0.032085,0.527855,0.283016,0.154628,0.160699,0.552854,0.262303],
[0.482699,0.645552,-0.114805,0.088755,-0.698846,0.218017,-0.682467,-0.208615,0.402596],
[0.326125,-0.105737,-0.812565,0.0454816,0.280418,0.455249,0.339489,-0.479871,0.225734],
[0.256648,0.713483,-0.486959,0.196059,0.124017,0.0380013,0.785004,-0.907221,0.600684],
[0,0,0,0,0,0,0,0,1]];

//输入→隐藏层2，Weight+Biases
var ann_layer_2 = [[-0.000000000000000000000000000000000000000323132,-0.000000000000000000000000000000000000000073599,0.224709,-0.109054,0.269021,0.823961,-0.703899,0.000000000000000000000000000000000000000509707,-0.961855,0.300343,-0.816672,0.289762,-0.0776203,0.512672,0.609758,0.740317,0.137776,-0.540725,-0.313177],
[0.00000000000000000000000000000000000000061339,0.000000000000000000000000000000000000000171967,-0.833179,-0.3016,0.895139,-0.546016,0.775466,-0.0000000000000000000000000000000000000000665322,0.294051,0.322523,0.825289,0.275131,-0.355187,-0.413606,0.00484185,0.308105,-0.500184,0.940448,-0.659848],
[0.0000000000000000000000000000000000000000254714,-0.000000000000000000000000000000000000000118455,0.503968,-0.503441,0.38666,-0.104732,0.328795,-0.0000000000000000000000000000000000000000954466,-0.3817,0.656053,-0.0280138,-1.15531,0.416452,0.634183,-0.36465,-0.284877,0.106014,0.0042018,0.041354],
[0.000000000000000000000000000000000000000366745,-0.000000000000000000000000000000000000000269442,0.102906,0.125023,0.830514,-0.74139,-0.160578,-0.000000000000000000000000000000000000000204301,0.644495,-0.349684,0.970852,0.491519,-0.160523,-0.246501,0.125165,-0.69683,0.345647,-0.0913319,-0.0824016],
[0.00000000000000000000000000000000000000024558,0.000000000000000000000000000000000000000311307,0.879446,-0.778585,-0.690308,0.260739,-0.17762,-0.000000000000000000000000000000000000000441503,0.119975,-0.34189,-0.490349,-0.536929,0.282146,0.531015,0.400204,-0.0536103,0.640021,0.267878,0.468529],
[0.000000000000000000000000000000000000000136775,0.000000000000000000000000000000000000000386094,0.221765,0.0837354,-0.0858689,0.000000000000000000000000000000000000000137717,0.344761,0.000000000000000000000000000000000000000129366,0.0916617,-0.46328,-0.0431468,-0.336083,0.230037,0.0685641,-0.382596,0.159608,0.302501,0.596588,-0.283192],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]];

//输入→隐藏层3，Weight+Biases
var ann_layer_3 = [[-1.43414,1.27942,-1.16773,1.51156,-0.649664,-0.637755,0.508635],
[1.39548,-1.30281,1.12376,-1.59122,1.40015,0.603769,0.0482445],
[0,0,0,0,0,0,1]];
